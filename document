#!/usr/bin/sbcl --script
;; -*- lisp -*-
(load "~/.sbclrc" :if-does-not-exist nil)
(require :schulte-documentation-template)
(require :alexandria)
(defvar *pkg-name* (string-downcase (second sb-ext:*posix-argv*)))
(defvar *pkg* (read-from-string (concatenate 'string ":" *pkg-name*)))
(require *pkg-name*)

(defvar *subtitles*
  '((:pseudo-print . "print lisp as pseudo-code")))

(defvar *sources*
  '((:pseudo-print . "http://github.com/eschulte/pseudo-print")))

(defvar *abstracts*
  '((:pseudo-print .
     "<p>The PSEUDO-PRINT library uses the Common Lisp's pretty printing
facilities to print pseudo code instead of lisp code.  It relies
heavily on the use of format strings.  See <a
href=\"http://www.cs.cmu.edu/Groups/AI/html/cltl/clm/node253.html\">cltl</a>
for a great reference on Common Lisp's pretty printer, and for more
information on this library including examples see <a
href=\"http://eschulte.github.com/pseudo-print\">PSEUDO-PRINT</a>.</p>

<p><b>Note</b>: This library is early days, and many common macros and
functions are not yet supported.  Patches welcome.  </p>")))

(schulte-documentation-template:create-template *pkg*
 :maybe-skip-methods-p t
 :target (concatenate 'string *pkg-name* ".pre")
 :subtitle (cdr (assoc *pkg* *subtitles*))
 :abstract (cdr (assoc *pkg* *abstracts*))
 :source   (cdr (assoc *pkg* *sources*)))
